// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: draw.proto

package com.liulin.auto.packet;

public final class DrawProto {
  private DrawProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface UploadPIcReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bytes pic = 1;
    boolean hasPic();
    com.google.protobuf.ByteString getPic();
  }
  public static final class UploadPIcReq extends
      com.google.protobuf.GeneratedMessage
      implements UploadPIcReqOrBuilder {
    // Use UploadPIcReq.newBuilder() to construct.
    private UploadPIcReq(Builder builder) {
      super(builder);
    }
    private UploadPIcReq(boolean noInit) {}
    
    private static final UploadPIcReq defaultInstance;
    public static UploadPIcReq getDefaultInstance() {
      return defaultInstance;
    }
    
    public UploadPIcReq getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DrawProto.internal_static_UploadPIcReq_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DrawProto.internal_static_UploadPIcReq_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bytes pic = 1;
    public static final int PIC_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString pic_;
    public boolean hasPic() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.google.protobuf.ByteString getPic() {
      return pic_;
    }
    
    private void initFields() {
      pic_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, pic_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, pic_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static UploadPIcReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static UploadPIcReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static UploadPIcReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static UploadPIcReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static UploadPIcReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static UploadPIcReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static UploadPIcReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static UploadPIcReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static UploadPIcReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static UploadPIcReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(UploadPIcReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements UploadPIcReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DrawProto.internal_static_UploadPIcReq_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DrawProto.internal_static_UploadPIcReq_fieldAccessorTable;
      }
      
      // Construct using com.liulin.auto.packet.DrawProto.UploadPIcReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        pic_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return UploadPIcReq.getDescriptor();
      }
      
      public UploadPIcReq getDefaultInstanceForType() {
        return UploadPIcReq.getDefaultInstance();
      }
      
      public UploadPIcReq build() {
        UploadPIcReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private UploadPIcReq buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        UploadPIcReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public UploadPIcReq buildPartial() {
        UploadPIcReq result = new UploadPIcReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pic_ = pic_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof UploadPIcReq) {
          return mergeFrom((UploadPIcReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(UploadPIcReq other) {
        if (other == UploadPIcReq.getDefaultInstance()) return this;
        if (other.hasPic()) {
          setPic(other.getPic());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              pic_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bytes pic = 1;
      private com.google.protobuf.ByteString pic_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasPic() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.google.protobuf.ByteString getPic() {
        return pic_;
      }
      public Builder setPic(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        pic_ = value;
        onChanged();
        return this;
      }
      public Builder clearPic() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pic_ = getDefaultInstance().getPic();
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:UploadPIcReq)
    }
    
    static {
      defaultInstance = new UploadPIcReq(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:UploadPIcReq)
  }
  
  public interface LockPIcReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 location = 1;
    boolean hasLocation();
    int getLocation();
  }
  public static final class LockPIcReq extends
      com.google.protobuf.GeneratedMessage
      implements LockPIcReqOrBuilder {
    // Use LockPIcReq.newBuilder() to construct.
    private LockPIcReq(Builder builder) {
      super(builder);
    }
    private LockPIcReq(boolean noInit) {}
    
    private static final LockPIcReq defaultInstance;
    public static LockPIcReq getDefaultInstance() {
      return defaultInstance;
    }
    
    public LockPIcReq getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DrawProto.internal_static_LockPIcReq_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DrawProto.internal_static_LockPIcReq_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 location = 1;
    public static final int LOCATION_FIELD_NUMBER = 1;
    private int location_;
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getLocation() {
      return location_;
    }
    
    private void initFields() {
      location_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, location_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, location_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static LockPIcReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static LockPIcReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static LockPIcReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static LockPIcReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static LockPIcReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static LockPIcReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static LockPIcReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static LockPIcReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static LockPIcReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static LockPIcReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(LockPIcReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements LockPIcReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DrawProto.internal_static_LockPIcReq_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DrawProto.internal_static_LockPIcReq_fieldAccessorTable;
      }
      
      // Construct using com.liulin.auto.packet.DrawProto.LockPIcReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        location_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LockPIcReq.getDescriptor();
      }
      
      public LockPIcReq getDefaultInstanceForType() {
        return LockPIcReq.getDefaultInstance();
      }
      
      public LockPIcReq build() {
        LockPIcReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private LockPIcReq buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        LockPIcReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public LockPIcReq buildPartial() {
        LockPIcReq result = new LockPIcReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.location_ = location_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof LockPIcReq) {
          return mergeFrom((LockPIcReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(LockPIcReq other) {
        if (other == LockPIcReq.getDefaultInstance()) return this;
        if (other.hasLocation()) {
          setLocation(other.getLocation());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              location_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 location = 1;
      private int location_ ;
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getLocation() {
        return location_;
      }
      public Builder setLocation(int value) {
        bitField0_ |= 0x00000001;
        location_ = value;
        onChanged();
        return this;
      }
      public Builder clearLocation() {
        bitField0_ = (bitField0_ & ~0x00000001);
        location_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:LockPIcReq)
    }
    
    static {
      defaultInstance = new LockPIcReq(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:LockPIcReq)
  }
  
  public interface LockPIcRespOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bytes pic = 1;
    boolean hasPic();
    com.google.protobuf.ByteString getPic();
  }
  public static final class LockPIcResp extends
      com.google.protobuf.GeneratedMessage
      implements LockPIcRespOrBuilder {
    // Use LockPIcResp.newBuilder() to construct.
    private LockPIcResp(Builder builder) {
      super(builder);
    }
    private LockPIcResp(boolean noInit) {}
    
    private static final LockPIcResp defaultInstance;
    public static LockPIcResp getDefaultInstance() {
      return defaultInstance;
    }
    
    public LockPIcResp getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DrawProto.internal_static_LockPIcResp_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DrawProto.internal_static_LockPIcResp_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bytes pic = 1;
    public static final int PIC_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString pic_;
    public boolean hasPic() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.google.protobuf.ByteString getPic() {
      return pic_;
    }
    
    private void initFields() {
      pic_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, pic_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, pic_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static LockPIcResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static LockPIcResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static LockPIcResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static LockPIcResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static LockPIcResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static LockPIcResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static LockPIcResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static LockPIcResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static LockPIcResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static LockPIcResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(LockPIcResp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements LockPIcRespOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DrawProto.internal_static_LockPIcResp_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DrawProto.internal_static_LockPIcResp_fieldAccessorTable;
      }
      
      // Construct using com.liulin.auto.packet.DrawProto.LockPIcResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        pic_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LockPIcResp.getDescriptor();
      }
      
      public LockPIcResp getDefaultInstanceForType() {
        return LockPIcResp.getDefaultInstance();
      }
      
      public LockPIcResp build() {
        LockPIcResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private LockPIcResp buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        LockPIcResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public LockPIcResp buildPartial() {
        LockPIcResp result = new LockPIcResp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pic_ = pic_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof LockPIcResp) {
          return mergeFrom((LockPIcResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(LockPIcResp other) {
        if (other == LockPIcResp.getDefaultInstance()) return this;
        if (other.hasPic()) {
          setPic(other.getPic());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              pic_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bytes pic = 1;
      private com.google.protobuf.ByteString pic_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasPic() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.google.protobuf.ByteString getPic() {
        return pic_;
      }
      public Builder setPic(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        pic_ = value;
        onChanged();
        return this;
      }
      public Builder clearPic() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pic_ = getDefaultInstance().getPic();
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:LockPIcResp)
    }
    
    static {
      defaultInstance = new LockPIcResp(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:LockPIcResp)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UploadPIcReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UploadPIcReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LockPIcReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LockPIcReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LockPIcResp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LockPIcResp_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\ndraw.proto\"\033\n\014UploadPIcReq\022\013\n\003pic\030\001 \001(" +
      "\014\"\036\n\nLockPIcReq\022\020\n\010location\030\001 \001(\005\"\032\n\013Loc" +
      "kPIcResp\022\013\n\003pic\030\001 \001(\014B#\n\026com.liulin.auto" +
      ".packetB\tDrawProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_UploadPIcReq_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_UploadPIcReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UploadPIcReq_descriptor,
              new String[] { "Pic", },
              UploadPIcReq.class,
              UploadPIcReq.Builder.class);
          internal_static_LockPIcReq_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_LockPIcReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LockPIcReq_descriptor,
              new String[] { "Location", },
              LockPIcReq.class,
              LockPIcReq.Builder.class);
          internal_static_LockPIcResp_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_LockPIcResp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LockPIcResp_descriptor,
              new String[] { "Pic", },
              LockPIcResp.class,
              LockPIcResp.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
